apiVersion: apps/v1
kind: Deployment
metadata:
  name: defi2
  namespace: u-8ttzx
  labels:
    app: defi2
spec:
  replicas: 3                             # Nombre de répliques de pods
  selector:
    matchLabels:
      app: defi2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: defi2
    spec:
      containers:
      - name: csc8567
        image: xhelozs/csc8567:v1         # Image du conteneur
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080             # Port sur lequel l'application écoute dans le conteneur
        resources:
          requests:
            cpu: "100m"                   # Requête minimale : 1/10 CPU
            memory: "100Mi"               # Requête minimale : 100 Mo de RAM
          limits:
            cpu: "200m"                   # Limite maximale : 1/5 CPU
            memory: "200Mi"               # Limite maximale : 200 Mo de RAM
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: defi2-service
  namespace: u-8ttzx
spec:
  selector:
    app: defi2
  ports:
    - protocol: TCP
      port: 8080                            # Port exposé par le service à l'intérieur du cluster
      targetPort: 5000                    # Port exposé par l'application dans le conteneur
  type: ClusterIP                         # Type de service pour un accès interne au cluster
