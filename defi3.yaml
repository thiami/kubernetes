apiVersion: apps/v1
kind: Deployment
metadata:
  name: defi3
  namespace: u-8ttzx
  labels:
    app: defi3
spec:
  replicas: 3                                # Nombre de répliques de pods Django
  selector:
    matchLabels:
      app: defi3
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: defi3
    spec:
      containers:
      - name: defi3
        image: ithiam/site_django:v4          # Image Docker de l'application Django
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000                 # Port interne de l'application Django
        env:
        - name: DATABASE_HOST
          value: postgresql                   # Nom du service PostgreSQL
        - name: DATABASE_PORT
          value: "5432"                       # Port PostgreSQL par défaut
        - name: DATABASE_NAME
          value: mydatabase                   # Nom de la base de données
        - name: DATABASE_USER
          value: super                        # Nom d'utilisateur de la base de données
        - name: DATABASE_PASSWORD
          value: super                        # Mot de passe de la base de données
        resources:
          requests:
            cpu: "100m"                       # Requête minimale : 1/10 CPU
            memory: "100Mi"                   # Requête minimale : 100 Mo de RAM
          limits:
            cpu: "200m"                       # Limite maximale : 1/5 CPU
            memory: "200Mi"                   # Limite maximale : 200 Mo de RAM
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: defi3-service
  namespace: u-8ttzx
  labels:
    app: defi3
spec:
  selector:
    app: defi3
  ports:
    - protocol: TCP
      port: 8080                             # Port exposé par le service dans le cluster
      targetPort: 8000                       # Port de l'application Django dans le conteneur
  type: ClusterIP                             # Type de service pour l'accès interne uniquement
